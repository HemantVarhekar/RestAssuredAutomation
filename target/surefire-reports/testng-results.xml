<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="8" passed="6">
  <reporter-output>
    <line>
      <![CDATA[Base URL http://services.groupkt.com/country is initialized ]]>
    </line>
    <line>
      <![CDATA[DE country is fetched and response is validated from /get/iso2code/DE]]>
    </line>
    <line>
      <![CDATA[GB country is fetched and response is validated from /get/iso2code/GB]]>
    </line>
    <line>
      <![CDATA[DE response validated from country/get/all API]]>
    </line>
    <line>
      <![CDATA[GB response validated from country/get/all API]]>
    </line>
    <line>
      <![CDATA[US response validated from country/get/all API]]>
    </line>
    <line>
      <![CDATA[US country is fetched and response is validated from /get/iso2code/US]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="44648" started-at="2018-08-06T14:22:46Z" finished-at="2018-08-06T14:23:30Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="44648" started-at="2018-08-06T14:22:46Z" finished-at="2018-08-06T14:23:30Z">
      <class name="getRequestValidationTest.ValidateInexistanceCountry">
        <test-method status="PASS" signature="setup()[pri:0, instance:getRequestValidationTest.ValidateInexistanceCountry@4678c730]" name="setup" is-config="true" duration-ms="0" started-at="2018-08-06T19:53:27Z" finished-at="2018-08-06T19:53:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="getnonExistingCountry()[pri:0, instance:getRequestValidationTest.ValidateInexistanceCountry@4678c730]" name="getnonExistingCountry" duration-ms="730" started-at="2018-08-06T19:53:27Z" finished-at="2018-08-06T19:53:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <404> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <404> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:636)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:122)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:130)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)
	at getRequestValidationTest.ValidateInexistanceCountry.getnonExistingCountry(ValidateInexistanceCountry.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getnonExistingCountry -->
      </class> <!-- getRequestValidationTest.ValidateInexistanceCountry -->
      <class name="getRequestValidationTest.ValidateUSCountryResponse">
        <test-method status="PASS" signature="getCallDECheck()[pri:0, instance:getRequestValidationTest.ValidateUSCountryResponse@6767c1fc]" name="getCallDECheck" duration-ms="2199" started-at="2018-08-06T19:53:28Z" finished-at="2018-08-06T19:53:30Z">
          <reporter-output>
            <line>
              <![CDATA[US country is fetched and response is validated from /get/iso2code/US]]>
            </line>
          </reporter-output>
        </test-method> <!-- getCallDECheck -->
        <test-method status="PASS" signature="setup()[pri:0, instance:getRequestValidationTest.ValidateUSCountryResponse@6767c1fc]" name="setup" is-config="true" duration-ms="0" started-at="2018-08-06T19:53:28Z" finished-at="2018-08-06T19:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- getRequestValidationTest.ValidateUSCountryResponse -->
      <class name="getRequestValidationTest.countryAPIInitializaton">
        <test-method status="PASS" signature="setup()[pri:0, instance:getRequestValidationTest.countryAPIInitializaton@cc285f4]" name="setup" is-config="true" duration-ms="5118" started-at="2018-08-06T19:52:46Z" finished-at="2018-08-06T19:52:51Z">
          <reporter-output>
            <line>
              <![CDATA[Base URL http://services.groupkt.com/country is initialized ]]>
            </line>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- getRequestValidationTest.countryAPIInitializaton -->
      <class name="getRequestValidationTest.ValidateGetCountryInfo">
        <test-method status="PASS" signature="setup()[pri:0, instance:getRequestValidationTest.ValidateGetCountryInfo@c038203]" name="setup" is-config="true" duration-ms="0" started-at="2018-08-06T19:53:24Z" finished-at="2018-08-06T19:53:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testResponseBodyMatchDE()[pri:0, instance:getRequestValidationTest.ValidateGetCountryInfo@c038203]" name="testResponseBodyMatchDE" duration-ms="1137" started-at="2018-08-06T19:53:24Z" finished-at="2018-08-06T19:53:25Z">
          <reporter-output>
            <line>
              <![CDATA[DE response validated from country/get/all API]]>
            </line>
          </reporter-output>
        </test-method> <!-- testResponseBodyMatchDE -->
        <test-method status="PASS" signature="testResponseBodyMatchGB()[pri:0, instance:getRequestValidationTest.ValidateGetCountryInfo@c038203]" name="testResponseBodyMatchGB" duration-ms="1229" started-at="2018-08-06T19:53:25Z" finished-at="2018-08-06T19:53:26Z">
          <reporter-output>
            <line>
              <![CDATA[GB response validated from country/get/all API]]>
            </line>
          </reporter-output>
        </test-method> <!-- testResponseBodyMatchGB -->
        <test-method status="PASS" signature="testResponseBodyMatchUSA()[pri:0, instance:getRequestValidationTest.ValidateGetCountryInfo@c038203]" name="testResponseBodyMatchUSA" duration-ms="1327" started-at="2018-08-06T19:53:26Z" finished-at="2018-08-06T19:53:27Z">
          <reporter-output>
            <line>
              <![CDATA[US response validated from country/get/all API]]>
            </line>
          </reporter-output>
        </test-method> <!-- testResponseBodyMatchUSA -->
      </class> <!-- getRequestValidationTest.ValidateGetCountryInfo -->
      <class name="getRequestValidationTest.ValidateGBCountryResponse">
        <test-method status="PASS" signature="setup()[pri:0, instance:getRequestValidationTest.ValidateGBCountryResponse@2a5ca609]" name="setup" is-config="true" duration-ms="1" started-at="2018-08-06T19:53:20Z" finished-at="2018-08-06T19:53:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getCallGBCheck()[pri:0, instance:getRequestValidationTest.ValidateGBCountryResponse@2a5ca609]" name="getCallGBCheck" duration-ms="3732" started-at="2018-08-06T19:53:20Z" finished-at="2018-08-06T19:53:24Z">
          <reporter-output>
            <line>
              <![CDATA[GB country is fetched and response is validated from /get/iso2code/GB]]>
            </line>
          </reporter-output>
        </test-method> <!-- getCallGBCheck -->
      </class> <!-- getRequestValidationTest.ValidateGBCountryResponse -->
      <class name="getRequestValidationTest.Post_ValidateNewCountryAddUsing">
        <test-method status="FAIL" signature="getnonExistingCountry()[pri:0, instance:getRequestValidationTest.Post_ValidateNewCountryAddUsing@29ee9faa]" name="getnonExistingCountry" duration-ms="21921" started-at="2018-08-06T19:52:51Z" finished-at="2018-08-06T19:53:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:636)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:122)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:130)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:117)
	at getRequestValidationTest.Post_ValidateNewCountryAddUsing.getnonExistingCountry(Post_ValidateNewCountryAddUsing.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getnonExistingCountry -->
      </class> <!-- getRequestValidationTest.Post_ValidateNewCountryAddUsing -->
      <class name="getRequestValidationTest.ValidateDECountryResponse">
        <test-method status="PASS" signature="setup()[pri:0, instance:getRequestValidationTest.ValidateDECountryResponse@18be83e4]" name="setup" is-config="true" duration-ms="0" started-at="2018-08-06T19:53:13Z" finished-at="2018-08-06T19:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getCallDECheck()[pri:0, instance:getRequestValidationTest.ValidateDECountryResponse@18be83e4]" name="getCallDECheck" duration-ms="7013" started-at="2018-08-06T19:53:13Z" finished-at="2018-08-06T19:53:20Z">
          <reporter-output>
            <line>
              <![CDATA[DE country is fetched and response is validated from /get/iso2code/DE]]>
            </line>
          </reporter-output>
        </test-method> <!-- getCallDECheck -->
      </class> <!-- getRequestValidationTest.ValidateDECountryResponse -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
